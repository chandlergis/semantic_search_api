version: '3.8'

services:
  # PostgreSQL数据库
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: semantic_search
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # Redis缓存服务 (用于文档比对缓存)
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # 后端API服务（使用本地构建的镜像）
  backend:
    image: semantic-search-backend:offline
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/semantic_search
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ENVIRONMENT=production
      - MAX_UPLOAD_SIZE=52428800
      - COMPARE_CACHE_TTL=3600
    volumes:
      - uploads:/app/uploads
      - temp_files:/app/temp_files
    ports:
      - "9000:8500"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

  # 前端Web应用（使用本地构建的镜像）
  frontend:
    image: semantic-search-frontend:offline
    environment:
      - VITE_API_BASE_URL=http://localhost:9000
    ports:
      - "30081:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local
  temp_files:
    driver: local

networks:
  app-network:
    driver: bridge